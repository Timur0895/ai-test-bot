import logging
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes, ConversationHandler

from maslow_test import ask_maslow_question  # –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ç–µ—Å—Ç—É

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
NEXT_TEST = 5

personality_questions = [
    # –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å (1‚Äì3)
    {"question": "1. –Ø –ª–µ–≥–∫–æ –∞–¥–∞–ø—Ç–∏—Ä—É—é—Å—å –∫ –Ω–æ–≤—ã–º —É—Å–ª–æ–≤–∏—è–º –∏ –±—ã—Å—Ç—Ä–æ –≤–∫–ª—é—á–∞—é—Å—å –≤ –Ω–µ–∑–Ω–∞–∫–æ–º—ã–π —Ä–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å.", "characteristic": "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å"},
    {"question": "2. –í —Å—Ç—Ä–µ—Å—Å–æ–≤—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö —è —Å–æ—Ö—Ä–∞–Ω—è—é —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è.", "characteristic": "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å"},
    {"question": "3. –Ø –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –æ—Ç–∫—Ä—ã—Ç –∫ –Ω–æ–≤—ã–º –º–µ—Ç–æ–¥–∞–º –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–º.", "characteristic": "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å"},

    # –ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å (4‚Äì6)
    {"question": "4. –ú–Ω–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è, –¥–∞–∂–µ –µ—Å–ª–∏ —è –Ω–µ –æ–±–ª–∞–¥–∞—é –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.", "characteristic": "–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å"},
    {"question": "5. –Ø —Å—Ç—Ä–µ–º–ª—é—Å—å –Ω–∞—Ö–æ–¥–∏—Ç—å —Ä–µ—à–µ–Ω–∏—è –≤ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –∏ –Ω–µ –±–æ—é—Å—å –ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ.", "characteristic": "–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å"},
    {"question": "6. –Ø —á–∞—Å—Ç–æ –±–µ—Ä—É –Ω–∞ —Å–µ–±—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏, –Ω–µ –¥–æ–∂–∏–¥–∞—è—Å—å –ø—Ä—è–º–æ–≥–æ —É–∫–∞–∑–∞–Ω–∏—è.", "characteristic": "–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å"},

    # –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç (7‚Äì9)
    {"question": "7. –í –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö —è —Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞—Ö–æ–¥–∏—Ç—å –∫–æ–º–ø—Ä–æ–º–∏—Å—Å –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è.", "characteristic": "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç"},
    {"question": "8. –Ø —Å–ø–æ–∫–æ–π–Ω–æ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—É—é –∫—Ä–∏—Ç–∏–∫—É –∏ –∏—Å–ø–æ–ª—å–∑—É—é –µ—ë –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è.", "characteristic": "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç"},
    {"question": "9. –Ø —É–º–µ—é –∑–∞–º–µ—á–∞—Ç—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—ë –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≤ –æ–±—â–µ–Ω–∏–∏.", "characteristic": "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç"},

    # –°–∞–º–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è (10‚Äì12)
    {"question": "10. –Ø —É–º–µ—é –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—ë –≤—Ä–µ–º—è –∏ —Ä–µ–¥–∫–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—é –¥–µ–ª–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–º–µ–Ω—Ç.", "characteristic": "–°–∞–º–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è"},
    {"question": "11. –î–ª—è –º–µ–Ω—è –≤–∞–∂–Ω–æ –≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã ‚Äî —ç—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–æ—é –º–æ—Ç–∏–≤–∞—Ü–∏—é.", "characteristic": "–°–∞–º–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è"},
    {"question": "12. –î–∞–∂–µ –≤ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è—Ö —è —Å—Ç–∞—Ä–∞—é—Å—å –¥–æ–≤–µ—Å—Ç–∏ –Ω–∞—á–∞—Ç–æ–µ –¥–æ –∫–æ–Ω—Ü–∞.", "characteristic": "–°–∞–º–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è"},

    # –ö–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ (13‚Äì15)
    {"question": "13. –ú–Ω–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ, —è –∞–∫—Ç–∏–≤–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é —Å –∫–æ–ª–ª–µ–≥–∞–º–∏.", "characteristic": "–ö–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏"},
    {"question": "14. –Ø –ª–µ–≥–∫–æ –Ω–∞—Ö–æ–∂—É –∫–æ–Ω—Ç–∞–∫—Ç —Å –Ω–æ–≤—ã–º–∏ –ª—é–¥—å–º–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—É—é –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—é.", "characteristic": "–ö–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏"},
    {"question": "15. –Ø —É–º–µ—é —è—Å–Ω–æ –∏ —É–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ –∏–∑–ª–∞–≥–∞—Ç—å —Å–≤–æ–∏ –º—ã—Å–ª–∏ –≤ —É—Å—Ç–Ω–æ–π –∏ –ø–∏—Å—å–º–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º–µ.", "characteristic": "–ö–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏"}
]


def get_scale_keyboard():
    keyboard = [
        [str(i) for i in range(1, 6)],
        [str(i) for i in range(6, 11)]
    ]
    return ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)

async def ask_personality_question(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    if context.user_data.get("personality_index", 0) == 0:
        context.user_data["personality_test_questions"] = [q["question"] for q in personality_questions]
    index = context.user_data.get("personality_index", 0)
    if index < len(personality_questions):
        question = personality_questions[index]
        await update.message.reply_text(
            f"{question['question']}\n",
            reply_markup=get_scale_keyboard()
        )
        return 4  # PERSONALITY
    else:
        return await analyze_personality(update, context)

async def process_personality_response(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    index = context.user_data.get("personality_index", 0)
    try:
        answer = int(update.message.text)
        if not 1 <= answer <= 10:
            raise ValueError
    except ValueError:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10.")
        return 4
    context.user_data.setdefault("personality_answers", []).append(answer)
    context.user_data["personality_index"] = index + 1
    return await ask_personality_question(update, context)

def interpret_score(score: int) -> str:
    if score >= 27:
        return "–æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å"
    elif score >= 22:
        return "–≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å"
    elif score >= 16:
        return "—Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å"
    else:
        return "–Ω–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å"

async def analyze_personality(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    answers = context.user_data.get("personality_answers", [])
    groups = {
        "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å": sum(answers[0:3]),
        "–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å": sum(answers[3:6]),
        "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç": sum(answers[6:9]),
        "–°–∞–º–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è": sum(answers[9:12]),
        "–ö–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏": sum(answers[12:15]),
    }
    analysis = ["–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –Ω–∞ —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏:"]
    for name, score in groups.items():
        analysis.append(f"- {name}: {score}/30 ({interpret_score(score)})")
    context.user_data["personality_result"] = "\n".join(analysis)
    await update.message.reply_text(context.user_data["personality_result"], reply_markup=ReplyKeyboardRemove())
    await update.message.reply_text(
        "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞ –ø–æ –ü–∏—Ä–∞–º–∏–¥–µ –ú–∞—Å–ª–æ—É.",
        reply_markup=ReplyKeyboardMarkup([["üî∫ –¢–µ—Å—Ç –ú–∞—Å–ª–æ—É"]], one_time_keyboard=True, resize_keyboard=True)
    )
    return NEXT_TEST
