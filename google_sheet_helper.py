import gspread
from oauth2client.service_account import ServiceAccountCredentials
from gspread.exceptions import WorksheetNotFound
from time import sleep

def save_results_to_google_sheet(user_data: dict) -> None:
    scope = [
        'https://www.googleapis.com/auth/spreadsheets',
        'https://www.googleapis.com/auth/drive'
    ]
    creds = ServiceAccountCredentials.from_json_keyfile_name('credentials.json', scope)
    client = gspread.authorize(creds)

    spreadsheet_url = "https://docs.google.com/spreadsheets/d/13GZ4iYS0NwoYgFG11Z7XhBDQheqZSpwHo2YY_mYbyn4/edit?gid=0#gid=0"
    spreadsheet = client.open_by_url(spreadsheet_url)

    candidate_name = user_data.get("full_name", "Unknown")
    try:
        worksheet = spreadsheet.worksheet(candidate_name)
    except WorksheetNotFound:
        worksheet = spreadsheet.add_worksheet(title=candidate_name, rows="300", cols="4")

    row = 1
    # üìå –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    metadata = [
        ["–ò–º—è –∏ –§–∞–º–∏–ª–∏—è", user_data.get("full_name", "")],
        ["–í–æ–∑—Ä–∞—Å—Ç", user_data.get("age", "")],
        ["–ü–æ–ª", user_data.get("gender", "")],
        ["–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ —Ç–∏–ø—É –ª–∏—á–Ω–æ—Å—Ç–∏", user_data.get("personality_result", "")],
        ["–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –ú–∞—Å–ª–æ—É", user_data.get("maslow_result", "")],
        ["–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ IQ", user_data.get("iq_result", "")]
    ]
    for entry in metadata:
        worksheet.update(f"A{row}:B{row}", [entry])
        row += 1
        sleep(0.5)

    row += 1  # –ü—Ä–æ–±–µ–ª

    # üîç –°–µ–∫—Ü–∏—è 1 ‚Äî –í–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–∏–ø—É –ª–∏—á–Ω–æ—Å—Ç–∏
    worksheet.update(f"A{row}:B{row}", [["–¢–µ—Å—Ç –Ω–∞ —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏", "–ì—Ä–∞–¥–∞—Ü–∏—è –æ—Ç 1 –¥–æ 10"]])
    row += 1
    worksheet.update(f"A{row}:B{row}", [["–í–æ–ø—Ä–æ—Å", "–û—Ç–≤–µ—Ç"]])
    row += 1
    for i, question in enumerate(user_data.get("personality_test_questions", [])):
        answer = user_data.get("personality_answers", [])[i] if i < len(user_data.get("personality_answers", [])) else ""
        worksheet.update(f"A{row}:B{row}", [[question, str(answer)]])
        row += 1
        sleep(0.5)

    row += 2

    # üîç –°–µ–∫—Ü–∏—è 2 ‚Äî –í–æ–ø—Ä–æ—Å—ã –ø–æ –ú–∞—Å–ª–æ—É
    worksheet.update(f"A{row}:B{row}", [["–¢–µ—Å—Ç –ø–æ –ú–∞—Å–ª–æ—É", "–ì—Ä–∞–¥–∞—Ü–∏—è –æ—Ç 1 –¥–æ 5"]])
    row += 1
    worksheet.update(f"A{row}:B{row}", [["–í–æ–ø—Ä–æ—Å", "–û—Ç–≤–µ—Ç"]])
    row += 1
    for i, question in enumerate(user_data.get("maslow_test_questions", [])):
        answer = user_data.get("maslow_answers", [])[i] if i < len(user_data.get("maslow_answers", [])) else ""
        worksheet.update(f"A{row}:B{row}", [[question, str(answer)]])
        row += 1
        sleep(0.5)

    row += 2

    # üîç –°–µ–∫—Ü–∏—è 3 ‚Äî –í–æ–ø—Ä–æ—Å—ã –ø–æ IQ
    worksheet.update(f"A{row}:B{row}", [["IQ –¢–µ—Å—Ç", "–í–µ—Ä–Ω–æ –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ"]])
    row += 1
    worksheet.update(f"A{row}:B{row}", [["–í–æ–ø—Ä–æ—Å", "–û—Ç–≤–µ—Ç"]])
    row += 1
    for i, question in enumerate(user_data.get("iq_test_questions", [])):
        answer = user_data.get("iq_scores", [])[i] if i < len(user_data.get("iq_scores", [])) else ""
        answer_text = "–í–µ—Ä–Ω–æ" if answer == 1 else "–ù–µ–≤–µ—Ä–Ω–æ"
        worksheet.update(f"A{row}:B{row}", [[question, answer_text]])
        row += 1
        sleep(0.5)
